Кроссплатформенная реализация встроенного в контекст исполняемого процесса хранилища данных (14 библиотек) и демо-приложение (исходный код + бинарные файлы).
Поддерживаемые платформы: Windows/WINTEL только 32-битные версии, Linux.
ПО содержит реализации трех типов хранилища данных (см. demo/repo/repository.cfg):
- тип 0 -- простейшая, наивная реализация, когда все наборы данных хранятся в ОЗУ;
- тип 1 -- референсная реализация, хранение наборов как в ОЗУ, так и на ВЗУ (в файлах локальной файловой системы, в БД реляционной СУБД). Политики вытеснения из памяти в долговременное хранилище (см. demo/repo/data_model.cfg) : LRU, MRU, LFU, GDSF, Buble, Random;
- тип 2 -- реализация, оптимальная с точки зрения ограничений на объем используемой оперативной памяти. Хранение наборов данных как в ОЗУ, так и на ВЗУ (POSIX mmap/MMF). Политики вытеснения из памяти в долговременное хранилище (см. demo/repo/data_model.cfg): LRU, MRU, LFU, GDSF, Buble, Random.

Подробное описание решения можно найти в [прилагаемой статье](https://github.com/flower-flavour/embedded-repo/blob/master/Ivankov-Manuilov-en.pdf).

КАК ИСПОЛЬЗОВАТЬ БИНАРНЫЕ ФАЙЛЫ
1. Скопировать содержимое директориев (только бинарные файлы и shell-скрипты), сохраняя их структуру и вложенность.
2. Запустить демо-приложение, воспользовавшись shell-скриптом, подготовленным нами для соответствующей платформы:
demo/repo/run.sh -- Linux
demo/repo/run.cmd -- Windows

КАК САМОСТОЯТЕЛЬНО СОБРАТЬ ИСПОЛНЯЕМЫЙ ФАЙЛ ДЕМО-ПРИЛОЖЕНИЯ
Предварительные условия.
1) На Вашей рабочей станции должен быть установлен gcc версии 5.#.# или выше (наши сборки ограничиваются диапазоном версий от 5.1.0 до 11.2)
Вниманию пользователей Linux: на Вашей рабочей станции должен быть установлен 32-битный комплект библиотек, версия glibc не ниже 2.23.
Вниманию пользователей Windows: Вам нужно самостоятельно загрузить в libs32/Boost заголовочные файлы (h/hpp-файлы! Используются только они) библиотеки Boost, версии 1.65.
Альтернатива: распаковать в эту директорию содержимое прилагаемого архива (zip-файла): https://drive.google.com/file/d/1UCQE6nfUHOlEHXQSQyw7_A755_vN39Ll

2) На Вашей рабочей станции должен быть установлен CMake, версия которого не ниже 3.8.

Собственно для самой сборки:
1. Скопировать содержимое директориев (бинарные файлы библиотек, исходный код демо-приложения и shell-скрипты), сохраняя их структуру и вложенность.
2. Запустить процесс сборки бинарного файла демо-приложения, воспользовавшись shell-скриптом, подготовленным нами для соответствующей платформы:
demo/repo/run_cmake.sh -- Linux
demo/repo/run_cmake.cmd -- Windows

НЕСКОЛЬКО ЗАМЕЧАНИЙ ДЛЯ ОЗАБОЧЕННЫХ ПОЛЬЗОВАТЕЛЕЙ
1. Наше ПО уже много лет используется нами для решения различного рода задач как на 32-битных, так и на 64-битных платформах. Все прилагаемые, в libs32, бинарные файлы библиотек собраны только для 32-битных платформ (-m32), т. к. только для этих платформ мы все еще поддерживаем реализацию хранилища типа 0. Тем самым становится ясно, что комплект из 64-битных бинарных файлов библиотек существенно сократил бы число альтернативных реализаций хранилища.
2. Публичные интерфейсы (API) спроектировал Алексей Александрович Иванков. Он отдает себе отчет в том, что они не всегда лаконичны, сами алгебры операций и наборы параметров у методов, реализующих эти операции, не всегда минимально возможные. Причина такой «избыточности»  достаточно тривиальна. Реализации встроенных хранилищ — это всего лишь небольшая часть одного из фреймворков, спроектированных и разрабатываемых тем же автором уже не одно десятилетие. Для обеспечения обратной совместимости с остальными компонентами фреймворка пришлось пожертвовать многими принципами проектирования оптимальных интерфейсов.

БЛАГОДАРНОСТИ
В разработке кода хранилища типа 0 в разное время и в разном качестве принимали участие Сидоровская Анастасия Александровна, Гаврилов Андрей Олегович, Тетюхин Артём Сергеевич,
Хранилище типа 1 было спроектировано, реализовано и любезно предоставлено нам Георгием Андреевичем Мануиловым.
Хранилище типа 2 разработал и предоставил Вашему вниманию А.А. Иванков.
Успешная многолетняя эксплуатация перечисленных программных реализаций — это безусловная заслуга вышеперечисленных Авторов, а за все ошибки и недочеты (включая еще не обнаруженные нами) несет ответственность исключительно их руководитель — А.А., Иванков.


P.S. И, пожалуйста, не надо нас донимать вопросами вида: «Почему у меня не собирается Ваше демо-приложение?»

